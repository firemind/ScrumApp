/*
 * File: app/view/MyTasksPanel.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.1.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('ScrumApp.view.MyTasksPanel', {
    extend: 'Ext.tab.Panel',
    alias: 'widget.mytaskspanel',

    config: {
        items: [
            {
                xtype: 'list',
                iconCls: '',
                store: 'taskSyncStore',
                title: 'Open',
                itemId: 'openTaskList',
                itemTpl: [
                    '<div>{name}</div>'
                ]
            },
            {
                xtype: 'list',
                iconCls: '',
                store: 'taskSyncStore',
                title: 'In Progress',
                itemId: 'inProgressTaskList',
                itemTpl: [
                    '<div>{name}</div>'
                ]
            },
            {
                xtype: 'list',
                store: 'taskSyncStore',
                title: 'Completed',
                itemId: 'closedTaskList',
                itemTpl: [
                    '<div>{name}</div>'
                ]
            }
        ],
        listeners: [
            {
                fn: 'onItemTap',
                event: 'itemtap',
                delegate: '#openTaskList'
            },
            {
                fn: 'onItemTap',
                event: 'itemtap',
                delegate: '#inProgressTaskList'
            },
            {
                fn: 'onItemTap',
                event: 'itemtap',
                delegate: '#closedTaskList'
            },
            {
              event: 'activate',
              delegate: '#openTaskList',
              fn: function(newActiveItem, container, oldActiveItem, eOpt){ var s= Ext.getStore('taskSyncStore'); s.clearFilter();s.filter('state',  'open');}
            },
            {
              event: 'activate',
              delegate: '#inProgressTaskList',
              fn: function(newActiveItem, container, oldActiveItem, eOpt){ var s= Ext.getStore('taskSyncStore'); s.clearFilter();s.filter('state',  'in_progress');}
            },
            {
              event: 'activate',
              delegate: '#closedTaskList',
              fn: function(newActiveItem, container, oldActiveItem, eOpt){ var s= Ext.getStore('taskSyncStore'); s.clearFilter();s.filter('state',  'closed');}
            }
        ]
    },

    onItemTap: function(dataview, index, target, record, e, options) {
        console.dir(dataview);
        console.dir(index);
        console.dir(record);
        console.dir(e);
        console.dir(options);
        ScrumApp.app.redirectTo("tasks/"+ record.getId());
    }

});
